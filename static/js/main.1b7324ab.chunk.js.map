{"version":3,"sources":["ListDetails.js","LoadingComponent.js","ListsPage.js","Contacts.js","Navigation.js","AccountDetails.js","ListPage.js","AccountPage.js","AccountsPage.js","App.js","serviceWorker.js","index.js"],"names":["StyledList","styled","div","props","width","parseInt","scale","height","backgroundColor","padding","margin","display","Account","p","Title","h4","Content","Date","withRouter","item","history","onClick","path","id","push","account","title","body","pub_date","LoadingDiv","LoadingImg","img","LoadingComponent","src","alt","ListsPage","useState","lists","setLists","updateLists","fetch","then","res","json","items","useEffect","setInterval","MainChildWrapper","length","map","ContactLink","Link","Wrapper","Contacts","accountId","contactsAccounts","setContactsAccounts","JSON","parse","contacts","forEach","c","concat","loadContactsAccounts","to","nick","Nav","nav","Logo","StyledNavLink","NavLink","Navigation","exact","activeClassName","AccountWrapper","a","textDecoration","color","position","AccountImageWrapper","AccountImageSquare","AccountImage","AccountTextWrapper","AccountDetails","href","className","OneLiner","ListPage","listId","match","params","list","setList","Object","keys","key","toString","ListsWrapper","AccountPage","setAccount","StyledAccountDetails","AccountsPage","accounts","setAccounts","updateAccounts","Main","component","App","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"6wBAIA,IAAMA,EAAaC,IAAOC,IACtB,SAAAC,GAAK,MAAK,CACNC,MAAO,GAAKC,SAASF,EAAMG,OAAS,KACpCC,OAAQ,GAAKF,SAASF,EAAMG,OAAS,KACrCE,gBAAiB,YACjBC,QAAS,GAAMJ,SAASF,EAAMG,OAAS,KACvCI,OAAQL,SAASF,EAAMG,OAAS,KAChCK,QAAS,kBAIXC,EAAUX,IAAOY,EAAV,KAKPC,EAAQb,IAAOc,GAAV,KAMLC,EAAUf,IAAOY,EAAV,KAMPI,EAAOhB,IAAOY,EAAV,KAuBKK,cAjBK,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,QAASd,EAAW,EAAXA,MAMjC,OACI,kBAACN,EAAD,CAAYM,MAAOA,EAAOe,QANV,WAChB,IAAIC,EAAO,UAAYH,EAAKI,GAC5BH,EAAQI,KAAKF,KAKT,kBAACV,EAAD,KAAUO,EAAKM,SACf,kBAACX,EAAD,KAAQK,EAAKO,OACb,kBAACV,EAAD,KAAUG,EAAKQ,MACf,kBAAC,EAAD,KAAOR,EAAKS,a,gVC9CxB,IAAMC,EAAa5B,IAAOC,IAAV,KAOV4B,EAAa7B,IAAO8B,IAAV,KAcDC,EARU,WACrB,OACI,kBAACH,EAAD,KACI,kBAACC,EAAD,CAAYG,IAAI,yBAAyBC,IAAI,iBCY1CC,EA1BG,WAAO,IAAD,EACMC,mBAAS,IADf,mBACbC,EADa,KACNC,EADM,KAGdC,EAAc,WAChBC,MAAM,mCACDC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GAAK,OAAIN,EAASM,MAQhC,OALAC,oBAAU,WACNN,IACAO,YAAY,kBAAKP,KAAe,MACjC,IAGC,kBAACQ,GAAD,KAEQV,EAAMW,OAASX,EAAMY,IAAI,SAAC9B,GAAD,OACrB,kBAAC,EAAD,CAAMb,MAAM,KAAKa,KAAMA,MACtB,kBAAC,EAAD,Q,qiBCnBrB,IAAM+B,EAAcjD,YAAOkD,IAAPlD,CAAH,KAaXmD,EAAUnD,IAAOC,IAAV,KAoDEmD,EAzCE,WACb,IAAMC,EAAY,EADC,EAG6BlB,mBAC5C,IAJe,mBAGZmB,EAHY,KAGMC,EAHN,KA8BnB,OAFAX,oBArBA,WACIL,MAAM,sCAAwCc,GACzCb,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAtB,GAAI,OAAIsC,KAAKC,MAAMvC,EAAI,YAC5BsB,KAAK,SAAAkB,IAKd,SAA8BA,GAC1BA,EAASC,QACL,SAACrC,GACGiB,MAAM,sCAAwCjB,GACzCkB,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAhB,GACF+B,EAAoB,SAAAK,GAAC,OAAIA,EAAEC,OAAO,CAACrC,UAV3CsC,CAAqBJ,MAgBT,CAACL,IAGrB,kBAACF,EAAD,KAEQG,EAAiBP,OAASO,EAAiBN,IAAI,SAAC9B,GAAD,OAC3C,kBAAC+B,EAAD,CAAac,GAAI,aAAgB7C,EAAKI,IAAMJ,EAAK8C,QAChD,kBAAC,EAAD,Q,+lBC5DrB,IAAMC,EAAMjE,IAAOkE,IAAV,KASHC,EAAOnE,IAAO8B,IAAV,KAKJsC,EAAgBpE,YAAOqE,IAAPrE,CAAH,KAqBJsE,EARI,kBACf,kBAACL,EAAD,KACI,kBAACE,EAAD,CAAMnC,IAAI,cACV,kBAACoC,EAAD,CAAeG,OAAK,EAACC,gBAAgB,UAAUT,GAAG,UAAlD,SACA,kBAACK,EAAD,CAAeG,OAAK,EAACC,gBAAgB,UAAUT,GAAG,aAAlD,c,02BC/BR,IAAOU,EAAiBzE,IAAO0E,EAC3B,SAAAxE,GAAK,MAAK,CACNQ,QAAS,eACTiE,eAAgB,OAChBC,MAAO,QACPzE,MAAO,GAAIC,SAASF,EAAMG,OAAS,KACnCE,gBAAiB,YACjBsE,SAAU,WACVrE,QAAS,UAIXsE,EAAsB9E,IAAOC,IAAV,KAKnB8E,EAAqB/E,IAAOC,IAAV,KAYlB+E,EAAehF,IAAOC,IAAV,KAaZgF,EAAqBjF,IAAOC,IAAV,KA6BTiF,EAlBQ,SAAC,GAAsC,IAArCC,EAAoC,EAApCA,KAAM3D,EAA8B,EAA9BA,QAASnB,EAAqB,EAArBA,MAAO+E,EAAc,EAAdA,UAC3C,OACI,kBAACX,EAAD,CAAgBU,KAAMA,EAAM9E,MAAOA,EAAO+E,UAAWA,GACjD,kBAACN,EAAD,KACI,kBAACC,EAAD,KACI,kBAACC,EAAD,QAGR,kBAACC,EAAD,KACQ,oCAAUzD,EAAQwC,MAClB,2CACA,iDACA,kD,qHC9DpB,IAAMqB,EAAWrF,IAAOC,IAAV,KAmCCqF,EA9BE,SAAC,GAAY,IACpBC,EADmB,EAAVC,MACMC,OAAOF,OADH,EAGDpD,mBACpB,IAJqB,mBAGlBuD,EAHkB,KAGZC,EAHY,KAazB,OANA/C,oBAAU,WACNL,MAAM,mCAAqCgD,GACtC/C,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAtB,GAAI,OAAIyE,EAAQzE,MAC3B,CAACqE,IAGA,kBAACzC,GAAD,KACM8C,OAAOC,KAAKH,GAAM3C,OACR,6BACI,kBAACsC,EAAD,KACI,kBAAC,EAAD,CAAMhF,MAAM,KAAKyF,IAAKJ,EAAKK,WAAY7E,KAAMwE,KAEjD,kBAACL,EAAD,KACI,kBAAC,EAAD,CAAiBF,KAAM,aAAeO,EAAI,WAAgBrF,MAAM,IAAImB,QAAS,CAAC,KAAQkE,EAAI,aAGxG,kBAAC,EAAD,Q,wIC7BlB,IAAMM,GAAehG,IAAOC,IAAV,KAwCHgG,GAjCK,SAAC,GAAY,IACvB5C,EADsB,EAAVmC,MACMC,OAAOpC,UADH,EAEElB,mBAC1B,IAHwB,mBAErBX,EAFqB,KAEZ0E,EAFY,OAMF/D,mBACtB,IAPwB,mBAMrBC,EANqB,KAMdC,EANc,KAmB5B,OATAO,oBAAU,WACNL,MAAM,sCAAwCc,GACzCb,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAtB,GACFmB,EAASnB,EAAI,OACbgF,EAAWhF,MAEpB,CAACmC,IAGA,kBAACP,GAAD,KACG,kBAAC,EAAD,CAAgBzC,MAAM,KAAKmB,QAASA,IACnC,kBAACwE,GAAD,KAEQ5D,EAAMW,OAASX,EAAMY,IAAI,SAAC9B,GAAD,OACrB,kBAAC,EAAD,CAAMb,MAAM,KAAKa,KAAMA,MACtB,kBAAC,EAAD,S,iGClCzB,IAAMiF,GAAuBnG,YAAOkF,EAAPlF,CAAH,MA+BXoG,GA3BO,WAAO,IAAD,EAEQjE,mBAAS,IAFjB,mBAEjBkE,EAFiB,KAEPC,EAFO,KAIlBC,EAAiB,WACnBhE,MAAM,sCACDC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GAAK,OAAI2D,EAAY3D,MASnC,OANAC,oBAAU,WACN2D,IACA1D,YAAY,kBAAK0D,KAAkB,MACpC,IAIC,kBAACzD,GAAD,KAEQuD,EAAStD,OAASsD,EAASrD,IAAI,SAAC9B,GAAD,OAC3B,kBAACiF,GAAD,CAAsBhB,KAAM,aAAejE,EAAKI,GAAIjB,MAAM,IAAImB,QAASN,MACtE,kBAAC,EAAD,Q,uYCpBrB,IAAM4B,GAAmB9C,IAAOC,IAAV,MAWhBkD,GAAUnD,IAAOC,IAAV,MAcPuG,GAAO,kBACT,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOjC,OAAK,EAAClD,KAAK,SAASoF,UAAWvE,IACtC,kBAAC,IAAD,CAAOqC,OAAK,EAAClD,KAAK,iBAAiBoF,UAAWnB,IAC9C,kBAAC,IAAD,CAAOf,OAAK,EAAClD,KAAK,YAAYoF,UAAWL,KACzC,kBAAC,IAAD,CAAO7B,OAAK,EAAClD,KAAK,uBAAuBoF,UAAWR,KACpD,kBAAC,IAAD,CAAU5E,KAAM,IAAI0C,GAAG,aAIhB2C,GAlBH,kBACR,kBAAC,GAAD,KACI,kBAAC,EAAD,MACA,kBAAC,GAAD,MACA,kBAAC,EAAD,QCpBFC,GAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASvB,MACvB,2DAsCN,SAASwB,GAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTzE,KAAK,SAAA8E,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfR,UAAUC,cAAcQ,YAI1BC,QAAQC,IACN,iHAKEZ,GAAUA,EAAOa,UACnBb,EAAOa,SAAST,KAMlBO,QAAQC,IAAI,sCAGRZ,GAAUA,EAAOc,WACnBd,EAAOc,UAAUV,UAO5BW,MAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,KCzFjEC,IAASC,OACL,kBAAC,IAAD,KACI,kBAAC,GAAD,OAEJC,SAASC,eAAe,SDWrB,SAAkBpB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIoB,IAAIC,oBAAwB3B,OAAOC,SAAS3B,MACpDsD,SAAW5B,OAAOC,SAAS2B,OAIvC,OAGF5B,OAAO6B,iBAAiB,OAAQ,WAC9B,IAAMzB,EAAK,UAAMuB,oBAAN,sBAEP7B,KAgEV,SAAiCM,EAAOC,GAEtC3E,MAAM0E,GACHzE,KAAK,SAAAmG,GAEJ,IAAMC,EAAcD,EAASE,QAAQC,IAAI,gBAEnB,MAApBH,EAASI,QACO,MAAfH,IAA8D,IAAvCA,EAAYI,QAAQ,cAG5C7B,UAAUC,cAAc6B,MAAMzG,KAAK,SAAA8E,GACjCA,EAAa4B,aAAa1G,KAAK,WAC7BqE,OAAOC,SAASqC,aAKpBnC,GAAgBC,EAAOC,KAG1Be,MAAM,WACLJ,QAAQC,IACN,mEArFAsB,CAAwBnC,EAAOC,GAI/BC,UAAUC,cAAc6B,MAAMzG,KAAK,WACjCqF,QAAQC,IACN,gHAMJd,GAAgBC,EAAOC,MClC/BE,K","file":"static/js/main.1b7324ab.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst StyledList = styled.div(\r\n    props => ({\r\n        width: 20 * parseInt(props.scale) + \"px\",\r\n        height: 30 * parseInt(props.scale) + \"px\",\r\n        backgroundColor: \"lightgray\",\r\n        padding: 0.5 * parseInt(props.scale) + \"px\",\r\n        margin: parseInt(props.scale) + \"px\",\r\n        display: \"inline-block\",\r\n    })\r\n);\r\n\r\nconst Account = styled.p`\r\n    width: 100%;\r\n    height: 6%;\r\n`;\r\n\r\nconst Title = styled.h4`\r\n    width: 100%;\r\n    text-align: center;\r\n    height: 8%;\r\n`;\r\n\r\nconst Content = styled.p`\r\n    width: 100%;\r\n    text-align: justify;\r\n    height: 80%;\r\n`;\r\n\r\nconst Date = styled.p`\r\n    width: 100%;\r\n    text-align: right;\r\n    height: 6%;\r\n`;\r\n\r\nconst ListDetails = ({item, history, scale}) => {\r\n    const routeChange = () => {\r\n        let path = `/lists/` + item.id;\r\n        history.push(path);\r\n    };\r\n\r\n    return (\r\n        <StyledList scale={scale} onClick={routeChange}>\r\n            <Account>{item.account}</Account>\r\n            <Title>{item.title}</Title>\r\n            <Content>{item.body}</Content>\r\n            <Date>{item.pub_date}</Date>\r\n        </StyledList>\r\n    );\r\n};\r\n\r\nexport {StyledList};\r\nexport default withRouter(ListDetails);","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst LoadingDiv = styled.div`\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: rgb(200, 200, 200, 0.5);\r\n`;\r\n\r\nconst LoadingImg = styled.img`\r\n    margin-top: 50%;\r\n    margin-left: 50%;\r\n    transform: translate(-50%, -50%);\r\n`;\r\n\r\nconst LoadingComponent = () =>{\r\n    return(\r\n        <LoadingDiv>\r\n            <LoadingImg src=\"/loading-animation.gif\" alt=\"Loading...\"/>\r\n        </LoadingDiv>\r\n    );\r\n};\r\n\r\nexport default LoadingComponent;\r\n","import List from \"./ListDetails\";\r\nimport React, { useState , useEffect} from \"react\";\r\nimport {MainChildWrapper} from './App.js' ;\r\nimport LoadingComponent from \"./LoadingComponent\";\r\n\r\nconst ListsPage = () => {\r\n    const [lists, setLists] = useState([]);\r\n\r\n    const updateLists = () => {\r\n        fetch(\"http://localhost:8888/api/lists\")\r\n            .then(res => res.json())\r\n            .then(items => setLists(items))\r\n    };\r\n\r\n    useEffect(() => {\r\n        updateLists();\r\n        setInterval(()=> updateLists(), 10000)\r\n    }, []);\r\n\r\n    return (\r\n        <MainChildWrapper>\r\n            {\r\n                lists.length ? lists.map((item) => (\r\n                    <List scale=\"10\" item={item}/>\r\n                )) : <LoadingComponent />\r\n            }\r\n        </MainChildWrapper>\r\n    )\r\n\r\n};\r\n\r\nexport default ListsPage;","import React, { useState, useEffect } from \"react\";\r\nimport styled from 'styled-components';\r\nimport LoadingComponent from \"./LoadingComponent\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst ContactLink = styled(Link)`\r\n    display: block;\r\n    width: 100%;\r\n    height: 30px;\r\n    background-color: white;\r\n    margin: 8px 0;\r\n    float: left;\r\n    color: black;\r\n    text-decoration: none;\r\n    text-align: center;\r\n    line-height: 30px;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n    position: relative;\r\n    float: left;\r\n    width: 20%;\r\n    height: 100%;\r\n    color: green;\r\n    background-color: gray;\r\n    padding: 20px;\r\n    border: 20px solid white;\r\n`;\r\n\r\nconst Contacts = () => {\r\n    const accountId = 0;\r\n\r\n    const [contactsAccounts, setContactsAccounts] = useState(\r\n        []\r\n    );\r\n\r\n    function loadContacts() {\r\n        fetch(\"http://localhost:8888/api/accounts/\" + accountId)\r\n            .then(res => res.json())\r\n            .then(item => JSON.parse(item[\"contacts\"]))\r\n            .then(contacts => {\r\n                loadContactsAccounts(contacts);\r\n            })\r\n    }\r\n\r\n    function loadContactsAccounts(contacts) {\r\n        contacts.forEach(\r\n            (id) => {\r\n                fetch(\"http://localhost:8888/api/accounts/\" + id)\r\n                    .then(res => res.json())\r\n                    .then(account => {\r\n                        setContactsAccounts(c => c.concat([account]));\r\n                    })\r\n            }\r\n        );\r\n    }\r\n\r\n    useEffect(loadContacts, [accountId]);\r\n\r\n    return (\r\n        <Wrapper>\r\n            {\r\n                contactsAccounts.length ? contactsAccounts.map((item) => (\r\n                    <ContactLink to={`/accounts/` +  item.id} >{item.nick}</ContactLink>\r\n                )) : <LoadingComponent/>\r\n            }\r\n        </Wrapper>\r\n    )\r\n};\r\n\r\nexport default Contacts;\r\n","import styled from \"styled-components\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nconst Nav = styled.nav`\r\n    float: left;\r\n    width: 20%;\r\n    height: 100%;\r\n    padding: 20px;\r\n    border: 20px solid white;\r\n    background-color: gray;\r\n`;\r\n\r\nconst Logo = styled.img`\r\n    width: 70%;\r\n    margin: 0 15%;\r\n`;\r\n\r\nconst StyledNavLink = styled(NavLink)`\r\n    display: block;\r\n    width: 100%;\r\n    height: 40px;\r\n    background-color: white;\r\n    margin: 10px 0;\r\n    float: left;\r\n    color: black;\r\n    text-decoration: none;\r\n    text-align: center;\r\n    line-height: 40px;\r\n`;\r\n\r\nconst Navigation = () => (\r\n    <Nav>\r\n        <Logo src=\"/icon.png\"/>\r\n        <StyledNavLink exact activeClassName=\"current\" to='/lists'>Lists</StyledNavLink>\r\n        <StyledNavLink exact activeClassName=\"current\" to='/accounts'>Accounts</StyledNavLink>\r\n    </Nav>\r\n);\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport styled from \"styled-components\";\r\n\r\n\r\nconst  AccountWrapper = styled.a(\r\n    props => ({\r\n        display: \"inline-block\",\r\n        textDecoration: \"none\",\r\n        color: \"black\",\r\n        width: 40* parseInt(props.scale) + \"px\",\r\n        backgroundColor: \"lightgray\",\r\n        position: \"relative\",\r\n        padding: \"10px\"\r\n    })\r\n);\r\n\r\nconst AccountImageWrapper = styled.div`\r\n    width:30%;\r\n    float: left;\r\n`;\r\n\r\nconst AccountImageSquare = styled.div`\r\n    position: relative;\r\n    display:inline-block;\r\n    width: 100%;\r\n    \r\n    &:after{\r\n        content: '';\r\n        display: block;\r\n        margin-top: 100%;\r\n    }\r\n`;\r\n\r\nconst AccountImage = styled.div`\r\n    background-image: url(\"/loading-animation.gif\");\r\n    background-position: center;\r\n    background-size: cover;\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    border: 1px solid black;\r\n    border-radius: 50%;\r\n`;\r\n\r\nconst AccountTextWrapper = styled.div`\r\n    width: 70%;\r\n    right: 0;\r\n    top: 50%;\r\n    position: absolute;\r\n    font-size: 20px;\r\n    transform: translate(0, -50%);\r\n`;\r\n\r\n\r\n\r\nconst AccountDetails = ({href, account, scale, className}) =>{\r\n    return (\r\n        <AccountWrapper href={href} scale={scale} className={className}>\r\n            <AccountImageWrapper>\r\n                <AccountImageSquare>\r\n                    <AccountImage/>\r\n                </AccountImageSquare>\r\n            </AccountImageWrapper>\r\n            <AccountTextWrapper>\r\n                    <p>Nick: {account.nick}</p>\r\n                    <p>Email: x@x.x</p>\r\n                    <p>Number of lists: X</p>\r\n                    <p>Register date: X</p>\r\n            </AccountTextWrapper>\r\n        </AccountWrapper>\r\n    )\r\n};\r\n\r\nexport default AccountDetails;","import React, {useEffect, useState} from 'react';\r\nimport {MainChildWrapper} from './App.js';\r\nimport List from \"./ListDetails\";\r\nimport LoadingComponent from \"./LoadingComponent\";\r\nimport AccountDetails from \"./AccountDetails\";\r\nimport styled from 'styled-components';\r\n\r\nconst OneLiner = styled.div`\r\n     width: 100%;\r\n     text-align: inherit;\r\n`;\r\n\r\nconst ListPage = ({match}) =>{\r\n    const listId = match.params.listId;\r\n\r\n    const [list, setList] = useState(\r\n        {}\r\n    );\r\n\r\n    useEffect(() =>{\r\n        fetch(\"http://localhost:8888/api/lists/\" + listId)\r\n            .then(res => res.json())\r\n            .then(item => setList(item))\r\n    }, [listId]);\r\n\r\n    return(\r\n        <MainChildWrapper>\r\n            { Object.keys(list).length?\r\n                        <div>\r\n                            <OneLiner>\r\n                                <List scale=\"15\" key={list.toString()} item={list}/>\r\n                            </OneLiner>\r\n                            <OneLiner>\r\n                                <AccountDetails  href={'/accounts/' + list[\"account_id\"]} scale=\"8\" account={{\"nick\": list[\"account\"]}}/>\r\n                            </OneLiner>\r\n                        </div>\r\n                : <LoadingComponent/>\r\n            }\r\n        </MainChildWrapper>\r\n    )\r\n};\r\n\r\nexport default ListPage;","import React, {useState, useEffect} from 'react';\r\nimport {MainChildWrapper} from './App.js' ;\r\nimport List from \"./ListDetails\";\r\nimport LoadingComponent from \"./LoadingComponent\";\r\nimport styled from 'styled-components';\r\nimport AccountDetails from \"./AccountDetails\";\r\n\r\nconst ListsWrapper = styled.div`\r\n    margin: 3vh auto;\r\n    width: 80%;\r\n    text-align: center;\r\n`;\r\n\r\n\r\nconst AccountPage = ({match}) =>{\r\n    const accountId = match.params.accountId;\r\n    const [account, setAccount] = useState(\r\n        {}\r\n    );\r\n\r\n    const [lists, setLists] = useState(\r\n        []\r\n    );\r\n\r\n    useEffect(() =>{\r\n        fetch(\"http://localhost:8888/api/accounts/\" + accountId)\r\n            .then(res => res.json())\r\n            .then(item => {\r\n                setLists(item[\"lists\"]);\r\n                setAccount(item)\r\n            })\r\n    }, [accountId]);\r\n\r\n    return(\r\n        <MainChildWrapper>\r\n           <AccountDetails scale=\"10\" account={account}/>\r\n            <ListsWrapper>\r\n                {\r\n                    lists.length ? lists.map((item) => (\r\n                        <List scale=\"10\" item={item}/>\r\n                    )) : <LoadingComponent />\r\n                }\r\n            </ListsWrapper>\r\n        </MainChildWrapper>\r\n    )\r\n};\r\n\r\nexport default AccountPage;","import React, { useState, useEffect} from 'react';\r\nimport {MainChildWrapper} from \"./App\";\r\nimport LoadingComponent from \"./LoadingComponent\";\r\nimport AccountDetails from \"./AccountDetails\";\r\nimport styled from 'styled-components';\r\n\r\nconst StyledAccountDetails = styled(AccountDetails)`\r\n    margin: 10px 20px;\r\n`;\r\n\r\nconst  AccountsPage = () => {\r\n\r\n    const [accounts, setAccounts] = useState([]);\r\n\r\n    const updateAccounts = () => {\r\n        fetch(\"http://localhost:8888/api/accounts\")\r\n            .then(res => res.json())\r\n            .then(items => setAccounts(items))\r\n    };\r\n\r\n    useEffect(() =>{\r\n        updateAccounts();\r\n        setInterval(()=> updateAccounts(), 30000)\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <MainChildWrapper>\r\n            {\r\n                accounts.length ? accounts.map((item) => (\r\n                    <StyledAccountDetails href={'/accounts/' + item.id} scale=\"8\" account={item}/>\r\n                )) : <LoadingComponent />\r\n            }\r\n        </MainChildWrapper>\r\n    )\r\n};\r\n\r\nexport default AccountsPage;","import React from 'react';\nimport './App.css';\nimport {Switch, Route, Redirect} from 'react-router-dom';\nimport ListsPage from \"./ListsPage\";\nimport Contacts from \"./Contacts\";\nimport Navigation from \"./Navigation\";\nimport styled from 'styled-components';\nimport ListPage from \"./ListPage\";\nimport AccountPage from \"./AccountPage\";\nimport AccountsPage from \"./AccountsPage\";\n\nconst MainChildWrapper = styled.div`\n    position: relative;\n    float: left;\n    width: 60%;\n    height: 100%;\n    border: 20px solid white;\n    text-align: center;\n    overflow: scroll;\n    scrollbar-width: none; \n`;\n\nconst Wrapper = styled.div`\n    width: 80%;\n    height: 100vh;\n    margin: 0 auto;\n`;\n\nconst App = () => (\n    <Wrapper>\n        <Navigation />\n        <Main />\n        <Contacts />\n    </Wrapper>\n);\n\nconst Main = () => (\n    <Switch>\n        <Route exact path='/lists' component={ListsPage}/>\n        <Route exact path='/lists/:listId' component={ListPage}/>\n        <Route exact path='/accounts' component={AccountsPage}/>\n        <Route exact path='/accounts/:accountId' component={AccountPage}/>\n        <Redirect path =\"*\" to=\"/lists\"/>\n    </Switch>\n);\n\nexport default App;\nexport {MainChildWrapper};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}